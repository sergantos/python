# Функция zip объединяет элементы из разных объектов(например, список или кортеж) и возвращает итератор
id = [ 1, 2, 3, 4]
leaders = [ 'Путин', 'Медведев','Мишустин','Песков']
record = zip(id,leaders)
print(list(record)) # [(1, 'Путин'), (2, 'Медведев'), (3, 'Мишустин'), (4, 'Песков')]

# Подаем на вход 1 список
print(list(zip(id))) # [(1,), (2,), (3,), (4,)]

# Подаем на вход 3 списка
record = zip( id, leaders, ['Владимир', 'Дмитрий', 'Михаил', 'Дмитрий'] )
print(list(record)) # [(1, 'Путин', 'Владимир'), (2, 'Медведев', 'Дмитрий'), (3, 'Мишустин', 'Михаил'), (4, 'Песков', 'Дмитрий')]

# Подаем на вход коллекцию разной длины - ориентация на меньшую длину!
record = zip( [1, 2], leaders)
print(list(record)) # [(1, 'Путин'), (2, 'Медведев')]

# Подаем на вход коллекцию разной длины, но ориентируемся на большую длину, пропуски заполняем аргументом fillvalue (по-умолчанию fillvalue=None)
from itertools import zip_longest
print(list(zip_longest( [1, 2], leaders))) # [(1, 'Путин'), (2, 'Медведев'), (None, 'Мишустин'), (None, 'Песков')]
print(list(zip_longest( [1, 2], leaders, fillvalue='-=Болт=-'))) # [(1, 'Путин'), (2, 'Медведев'), ('-=Болт=-', 'Мишустин'), ('-=Болт=-', 'Песков')]

# Распаковка - список кортежей разделить на отдельные списки
record = [ (1, 'Путин', 'Владимир'), (2, 'Медведев', 'Дмитрий'), (3, 'Мишустин', 'Михаил'), (4, 'Песков', 'Дмитрий') ]
id, leaders, name = zip(*record)
print(id) # (1, 2, 3, 4)
print(leaders) # ('Путин', 'Медведев', 'Мишустин', 'Песков')
print(name) # ('Владимир', 'Дмитрий', 'Михаил', 'Дмитрий')

# Создать словарь из двух списков не используя циклы
# 1-й способ
leader_dict = {i: name for i, name in zip(id, leaders)}
print(leader_dict) # {1: 'Путин', 2: 'Медведев', 3: 'Мишустин', 4: 'Песков'}
# 2-й способ
leader_dict2 = dict(zip(id,leaders))
print(leader_dict2) # {1: 'Путин', 2: 'Медведев', 3: 'Мишустин', 4: 'Песков'}

# Итерация по нескольким коллекциям без индексации
products = [ 'вишня', 'черешня', 'яблоки']
price = [ 2.5, 3, 5 ]
cost = [ 1, 1.5, 2]
for prod, p, c in zip(products, price, cost):
    print(f'Профит по {prod} получается ${p-c}')    # Профит по вишня получается $1.5
                                                    # Профит по черешня получается $1.5
                                                    # Профит по яблоки получается $3

# Транспонирование матрицы в одну строку
matrix = [ [1,5,6], [2,7,8], [3,9,10] ]
print( [ list(i) for i in zip(*matrix) ] ) # [[1, 2, 3], [5, 7, 9], [6, 8, 10]]